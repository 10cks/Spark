name: Build

on:
  push:
    tags-ignore:
      - '!v*.*.*'

jobs:

  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install statik
      run: |
        export PATH=$PATH:~/go/bin/
        go install github.com/rakyll/statik
        
    - name: Build and embed clients
      run: |
        chmod +x ./build.client.sh
        export GOMOD=`pwd`/go.mod
        export CGO_ENABLED=0
        go mod tidy
        go mod download
        ./build.client.sh
        statik -m -src="./built" -f -dest="./server/embed" -include=* -p built -ns built
        
    - name: Build and embed static resources
      run: |
        cd ./web
        npm install
        npm run build-prod
        statik -m -src="./dist" -f -dest="../server/embed" -p web -ns web
        cd ..
        
    - name: Build server
      run: |
        chmod +x ./build.server.sh
        export GOMOD=`pwd`/go.mod
        export CGO_ENABLED=0
        go mod tidy
        go mod download
        ./build.server.sh

    - name: Install zip and tar
      run: |
        cd ./releases
        sudo apt install zip tar -y
        tar -zcvf server_linux_arm.tar.gz server_linux_arm
        tar -zcvf server_linux_arm64.tar.gz server_linux_arm64
        tar -zcvf server_linux_i386.tar.gz server_linux_i386
        tar -zcvf server_linux_amd64.tar.gz server_linux_amd64
        zip -r server_windows_arm.zip server_windows_arm.exe
        zip -r server_windows_arm64.zip server_windows_arm64.exe
        zip -r server_windows_i386.zip server_windows_i386.exe
        zip -r server_windows_amd64.zip server_windows_amd64.exe
        
    - name: Upload binary files (server_linux_arm)
      uses: actions/upload-artifact@v2
      with:
        name: server_linux_arm.tar.gz
        path: releases/server_linux_arm.tar.gz

    - name: Upload binary files (server_linux_arm64)
      uses: actions/upload-artifact@v2
      with:
        name: server_linux_arm64.tar.gz
        path: releases/server_linux_arm64.tar.gz

    - name: Upload binary files (server_linux_i386)
      uses: actions/upload-artifact@v2
      with:
        name: server_linux_i386.tar.gz
        path: releases/server_linux_i386.tar.gz

    - name: Upload binary files (server_linux_amd64)
      uses: actions/upload-artifact@v2
      with:
        name: server_linux_amd64.tar.gz
        path: releases/server_linux_amd64.tar.gz

    - name: Upload binary files (server_windows_arm)
      uses: actions/upload-artifact@v2
      with:
        name: server_windows_arm.zip
        path: releases/server_windows_arm.zip

    - name: Upload binary files (server_windows_arm64)
      uses: actions/upload-artifact@v2
      with:
        name: server_windows_arm64.zip
        path: releases/server_windows_arm64.zip

    - name: Upload binary files (server_windows_i386)
      uses: actions/upload-artifact@v2
      with:
        name: server_windows_i386.zip
        path: releases/server_windows_i386.zip

    - name: Upload binary files (server_windows_amd64)
      uses: actions/upload-artifact@v2
      with:
        name: server_windows_amd64.zip
        path: releases/server_windows_amd64.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          releases/server_linux_arm.tar.gz
          releases/server_linux_arm64.tar.gz
          releases/server_linux_i386.tar.gz
          releases/server_linux_amd64.tar.gz
          releases/server_windows_arm.zip
          releases/server_windows_arm64.zip
          releases/server_windows_i386.zip
          releases/server_windows_amd64.zip
      env:
        GITHUB_REPOSITORY: XZB-1248/Spark